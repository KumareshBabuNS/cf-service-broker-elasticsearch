heat_template_version: 2016-04-08
description: >
        Deployment of of a Elasticsearch-Cluster with 3 nodes (Skript 3/4)
        Before using this main.yaml it is nessary to create the two pre-stacks (pre-volume.yaml and pre-ips.yaml).
        With the resources created in the pre-stacks you can create this main-stack with the referenced resources.
        Scripts 4 will used by this script for creation of the nodes.

parameters:

  image_id:
    type: string
    description: Image used for servers
    default: ubuntu-xenial-16.04_softwareconfig_0.0.1
  key_name:
    type: string
    description: SSH key to connect to the servers
  flavor:
    type: string
    description: flavor used by the servers
    default: mb1.small
  availability_zone:
    type: string
    description: Availability Zone of the nodes.
    default: zone00
  resource_name:
    type: string
    description: Name-prefix for created resources in OpenStack.

  node0_volume_id:
    type: string
    description: ID of the pre-created volume to be attached to the node 0.
  node0_port:
    type: string
    description: Port-ID of the pre-created Port for the node 0.
  node0_ip:
    type: string
    description: IP of node 0.

  node1_volume_id:
    type: string
    description: ID of the pre-created volume to be attached to the node 1.
  node1_port:
    type: string
    description: Network-Port used by the node 1.
  node1_ip:
    type: string
    description: IP of secondary node 1.

  node2_volume_id:
    type: string
    description: ID of the pre-created volume to be attached to the node 2.
  node2_port:
    type: string
    description: Network-Port used by the standby node.
  node2_ip:
    type: string
    description: IP of secondary node 2.

  cluster_name:
    type: string
    description: Name of the elasticsearch cluster.
    default: elasticsearch-cluster


resources:


  elasticsearch_node_0:
    type: elasticsearch-node.yaml
    properties:
      node_hostname:
        str_replace:
          template: $hostname-n0
          params:
            $hostname: { get_param: resource_name }
      image_id: {get_param: image_id }
      key_name: {get_param: key_name }
      flavor: {get_param: flavor }
      availability_zone: {get_param: availability_zone }
      node_volume_id: {get_param: node0_volume_id }
      node_port: {get_param: node0_port }
      cluster_name: {get_param: cluster_name }
      discovery_ip_1: {get_param: node1_ip }
      discovery_ip_2: {get_param: node2_ip }


  elasticsearch_node_1:
    type: elasticsearch-node.yaml
    properties:
      node_hostname:
        str_replace:
          template: $hostname-n1
          params:
            $hostname: { get_param: resource_name }
      image_id: {get_param: image_id }
      key_name: {get_param: key_name }
      flavor: {get_param: flavor }
      availability_zone: {get_param: availability_zone }
      node_volume_id: {get_param: node1_volume_id }
      node_port: {get_param: node1_port }
      cluster_name: {get_param: cluster_name }
      discovery_ip_1: {get_param: node0_ip }
      discovery_ip_2: {get_param: node2_ip }


  elasticsearch_node_2:
    type: elasticsearch-node.yaml
    properties:
      node_hostname:
        str_replace:
          template: $hostname-n2
          params:
            $hostname: { get_param: resource_name }
      image_id: {get_param: image_id }
      key_name: {get_param: key_name }
      flavor: {get_param: flavor }
      availability_zone: {get_param: availability_zone }
      node_volume_id: {get_param: node2_volume_id }
      node_port: {get_param: node2_port }
      cluster_name: {get_param: cluster_name }
      discovery_ip_1: {get_param: node0_ip }
      discovery_ip_2: {get_param: node1_ip }